trigger:
  branches:
    include:
    - '*'
variables:
- name: buildConfiguration
  value: 'Release'
stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm
    variables:
    - name: wwwrootDir
      value: 'Tailspin.SpaceGame.Web/wwwroot'
    - name: dotnetSdkVersion
      value: '3.1.300'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'
    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false
    - task: CmdLine@2
      displayName: 'Compile Sass assets'
      inputs:
        script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
    - task: gulp@1
      displayName: 'Run gulp tasks'
    - task: CmdLine@2
      displayName: 'Write build info'
      inputs:
        script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        workingDirectory: $(wwwrootDir)
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true
    - task: ecdc45f6-832d-4ad9-b52b-ee49e94659be@1
      inputs:
        path: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop

